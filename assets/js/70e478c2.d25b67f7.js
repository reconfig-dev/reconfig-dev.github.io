"use strict";(self.webpackChunkreconfig=self.webpackChunkreconfig||[]).push([[387],{4816:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return d},assets:function(){return p},toc:function(){return u},default:function(){return c}});var n=t(7462),i=t(3366),r=(t(7294),t(3905)),o=["components"],l={slug:"vivado-internal-params",title:"Use All Tunable Vivado Internal Params",authors:"syed",tags:["vivado","fpga","tcl"]},s=void 0,d={permalink:"/reconfig/vivado-internal-params",editUrl:"https://github.com/syed-ahmed/reconfig/edit/main/reconfig/blog/blog/2020-03-31-use-all-tunable-vivado-internal-params/index.md",source:"@site/blog/2020-03-31-use-all-tunable-vivado-internal-params/index.md",title:"Use All Tunable Vivado Internal Params",description:"So I learned about this parameter that can be set in vivado, called place.debugShape, for my overlay generation work. It was referred in one of the tcl scripts in RapidWright with the command setparam place.debugShape $shapesFileName. Studying the tcl commands guide, I found out, you can list the description of this property using reportparam -nondefault, which suggests place.debugShape is an internal knob. A caveat of the reportparam command is that, it only lists these internal params when it is changed from its default value (you can know its default value by getparam). That is, reportparam -non_default won't show you all the internal knobs that are in vivado.",date:"2020-03-31T00:00:00.000Z",formattedDate:"March 31, 2020",tags:[{label:"vivado",permalink:"/reconfig/tags/vivado"},{label:"fpga",permalink:"/reconfig/tags/fpga"},{label:"tcl",permalink:"/reconfig/tags/tcl"}],readingTime:1.865,truncated:!0,authors:[{name:"Syed Tousif Ahmed",title:"PhD Student, IC Group, UPenn",url:"https://syed-ahmed.github.io",imageURL:"https://syed-ahmed.github.io/images/profile-pic1.jpg",key:"syed"}],prevItem:{title:"Creating Vivado Hardware Platform using YAML",permalink:"/reconfig/yaml-based-vivado-hardware-project"}},p={authorsImageUrls:[void 0]},u=[],m={toc:u};function c(e){var a=e.components,t=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,n.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"So I learned about this parameter that can be set in vivado, called ",(0,r.kt)("inlineCode",{parentName:"p"},"place.debugShape"),", for my overlay generation work. It was referred in one of the tcl scripts in RapidWright with the command ",(0,r.kt)("inlineCode",{parentName:"p"},"set_param place.debugShape $shapesFileName"),". Studying the tcl commands guide, I found out, you can list the description of this property using ",(0,r.kt)("inlineCode",{parentName:"p"},"report_param -non_default"),", which suggests ",(0,r.kt)("inlineCode",{parentName:"p"},"place.debugShape")," is an internal knob. A caveat of the report_param command is that, it only lists these internal params when it is changed from its default value (you can know its default value by ",(0,r.kt)("inlineCode",{parentName:"p"},"get_param"),"). That is, ",(0,r.kt)("inlineCode",{parentName:"p"},"report_param -non_default")," won't show you all the internal knobs that are in vivado."))}c.isMDXComponent=!0}}]);