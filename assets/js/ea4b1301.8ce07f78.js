"use strict";(self.webpackChunkreconfig=self.webpackChunkreconfig||[]).push([[473],{9183:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return r},contentTitle:function(){return p},metadata:function(){return s},assets:function(){return d},toc:function(){return u},default:function(){return c}});var n=t(7462),i=t(3366),o=(t(7294),t(3905)),l=["components"],r={slug:"vivado-internal-params",title:"Use All Tunable Vivado Internal Params",authors:"syed",tags:["vivado","fpga","tcl"]},p=void 0,s={permalink:"/reconfig/vivado-internal-params",editUrl:"https://github.com/syed-ahmed/reconfig/edit/main/reconfig/blog/blog/2020-03-31-use-all-tunable-vivado-internal-params/index.md",source:"@site/blog/2020-03-31-use-all-tunable-vivado-internal-params/index.md",title:"Use All Tunable Vivado Internal Params",description:"So I learned about this parameter that can be set in vivado, called place.debugShape, for my overlay generation work. It was referred in one of the tcl scripts in RapidWright with the command setparam place.debugShape $shapesFileName. Studying the tcl commands guide, I found out, you can list the description of this property using reportparam -nondefault, which suggests place.debugShape is an internal knob. A caveat of the reportparam command is that, it only lists these internal params when it is changed from its default value (you can know its default value by getparam). That is, reportparam -non_default won't show you all the internal knobs that are in vivado.",date:"2020-03-31T00:00:00.000Z",formattedDate:"March 31, 2020",tags:[{label:"vivado",permalink:"/reconfig/tags/vivado"},{label:"fpga",permalink:"/reconfig/tags/fpga"},{label:"tcl",permalink:"/reconfig/tags/tcl"}],readingTime:1.865,truncated:!0,authors:[{name:"Syed Tousif Ahmed",title:"PhD Student, IC Group, UPenn",url:"https://syed-ahmed.github.io",imageURL:"https://syed-ahmed.github.io/images/profile-pic1.jpg",key:"syed"}],prevItem:{title:"Creating Vivado Hardware Platform using YAML",permalink:"/reconfig/yaml-based-vivado-hardware-project"}},d={authorsImageUrls:[void 0]},u=[],h={toc:u};function c(e){var a=e.components,t=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},h,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"So I learned about this parameter that can be set in vivado, called ",(0,o.kt)("inlineCode",{parentName:"p"},"place.debugShape"),", for my overlay generation work. It was referred in one of the tcl scripts in RapidWright with the command ",(0,o.kt)("inlineCode",{parentName:"p"},"set_param place.debugShape $shapesFileName"),". Studying the tcl commands guide, I found out, you can list the description of this property using ",(0,o.kt)("inlineCode",{parentName:"p"},"report_param -non_default"),", which suggests ",(0,o.kt)("inlineCode",{parentName:"p"},"place.debugShape")," is an internal knob. A caveat of the report_param command is that, it only lists these internal params when it is changed from its default value (you can know its default value by ",(0,o.kt)("inlineCode",{parentName:"p"},"get_param"),"). That is, ",(0,o.kt)("inlineCode",{parentName:"p"},"report_param -non_default")," won't show you all the internal knobs that are in vivado. "),(0,o.kt)("p",null,"Now that you have some context, it got me thinking are there other useful params which we should know about? Looks like somebody asked the same ",(0,o.kt)("a",{parentName:"p",href:"https://forums.xilinx.com/t5/Vivado-TCL-Community/lt-list-param-gt-not-listing-a-lot/td-p/998194"},"question")," in Xilinx's forum, but received a reply from Xilinx saying those are internal and thou shall not use it.\nWhen using the ",(0,o.kt)("inlineCode",{parentName:"p"},"place.debugShape")," in my scripts, I saw some outputs:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Shape builder is called from:\nStack:\n/opt/Xilinx/Vivado/2018.3/lib/lnx64.o/librdi_place.so(HAPLPlacerShapeBuilder::buildShapes(HDPLNewShapeDB&, HSTPtrHashSet&, HDPLTask&, HAPLPlaceApi*, HDPLControlSetDB const*,\n/opt/Xilinx/Vivado/2018.3/lib/lnx64.o/librdi_implflow.so(HAPLFFastFlow3::place(HAPLFFastFlowParam const&, HAPLFMigPblockInfo const*)+0x12cf) [0x7f51a8e7bb3f]\n/opt/Xilinx/Vivado/2018.3/lib/lnx64.o/libtcl8.5.so(+0x334af) [0x7f51ccef74af]\n")),(0,o.kt)("p",null,"which looked like a familiar pattern - a frontend (tcl) binding to a C++ backend. So I was like, ok, may be if I grep the object dump of one of these ",(0,o.kt)("inlineCode",{parentName:"p"},".so"),", I could get the params? That didn't work. But what did work was, when I treated the ",(0,o.kt)("inlineCode",{parentName:"p"},".so"),' in grep as a text file and searched for a "something-dot-camelCase" pattern, and voila, everything was in plain sight:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"place.debugCongestion\nplace.debugCrash\nplace.debugFFGroup\nplace.debugLightTimer\nplace.debugMacroInterleavingOptimization\nplace.debugShape\nplace.debugShapeAppend\nplace.debugWireLen\n...\n")),(0,o.kt)("p",null,"And many more such as:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"logicopt.allowEmptyHierCellNets\nlogicopt.allowEmptyHierCells\nlogicopt.allowInverterPushing\nlogicopt.annotateModifiedPrims\nlogicopt.applyFinishingTouch\nlogicopt.applyLogicProp\nlogicopt.applyPostPwroptCleanup\nlogicopt.applyRestruct\n...\n")),(0,o.kt)("p",null,"Similarly, there are tuneable params that look like ",(0,o.kt)("inlineCode",{parentName:"p"},"synth.*"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"route.*"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"power.*"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"timing.*"),". in their respective ",(0,o.kt)("inlineCode",{parentName:"p"},"librdi_*.so"),". That's all for this post. May be if you have a use-case, where you wanted vivado to do something, but it's not visible, one of these parameters might come into use! Of course I get Xilinx's point about these being internal knobs ;)."),(0,o.kt)("p",null,"FYI following is the command with regex I used:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"grep -a -o -E '[a-zA-Z0-9]{3,}.[a-z]([a-z0-9][A-Z][A-Z0-9][a-z]|[A-Z0-9][a-z][a-z0-9][A-Z])[a-ZA-Z0-9]{3,}' /opt/Xilinx/Vivado/2018.3/lib/lnx64.o/librdi_place.so\n")),(0,o.kt)("p",null,"You can find about 5000 of the params I scraped, in this repository: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/syed-ahmed/vivado-hacks"},"https://github.com/syed-ahmed/vivado-hacks")))}c.isMDXComponent=!0}}]);