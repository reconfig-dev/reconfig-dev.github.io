"use strict";(self.webpackChunkreconfig=self.webpackChunkreconfig||[]).push([[450],{6029:function(a){a.exports=JSON.parse('{"blogPosts":[{"id":"yaml-based-vivado-hardware-project","metadata":{"permalink":"/yaml-based-vivado-hardware-project","editUrl":"https://github.com/reconfig-dev/reconfig/edit/main/reconfig/blog/blog/2020-06-02-yaml-based-vivado-hardware-project/index.md","source":"@site/blog/2020-06-02-yaml-based-vivado-hardware-project/index.md","title":"Creating Vivado Hardware Platform using YAML","description":"The hardware design community have been following a design paradigm where you think of designing hardware spatially, i.e. start with a block diagram. I remember from my undergraduate logic design course, a block diagram was required before we started a lab assignment. It is the right approach for designing hardware. Vivado reinforces this paradigm by asking people to open the Vivado GUI, use the IP integrator and create a block design.","date":"2020-06-02T00:00:00.000Z","formattedDate":"June 2, 2020","tags":[{"label":"vivado","permalink":"/tags/vivado"},{"label":"fpga","permalink":"/tags/fpga"},{"label":"tcl","permalink":"/tags/tcl"},{"label":"yaml","permalink":"/tags/yaml"},{"label":"hydra","permalink":"/tags/hydra"}],"readingTime":5.59,"truncated":true,"authors":[{"name":"Syed Tousif Ahmed","title":"PhD Student, IC Group, UPenn","url":"https://syed-ahmed.github.io","imageURL":"https://syed-ahmed.github.io/images/profile-pic1.jpg","key":"syed"}],"nextItem":{"title":"Use All Tunable Vivado Internal Params","permalink":"/vivado-internal-params"}}},{"id":"vivado-internal-params","metadata":{"permalink":"/vivado-internal-params","editUrl":"https://github.com/reconfig-dev/reconfig/edit/main/reconfig/blog/blog/2020-03-31-use-all-tunable-vivado-internal-params/index.md","source":"@site/blog/2020-03-31-use-all-tunable-vivado-internal-params/index.md","title":"Use All Tunable Vivado Internal Params","description":"So I learned about this parameter that can be set in vivado, called place.debugShape, for my overlay generation work. It was referred in one of the tcl scripts in RapidWright with the command setparam place.debugShape $shapesFileName. Studying the tcl commands guide, I found out, you can list the description of this property using reportparam -nondefault, which suggests place.debugShape is an internal knob. A caveat of the reportparam command is that, it only lists these internal params when it is changed from its default value (you can know its default value by getparam). That is, reportparam -non_default won\'t show you all the internal knobs that are in vivado.","date":"2020-03-31T00:00:00.000Z","formattedDate":"March 31, 2020","tags":[{"label":"vivado","permalink":"/tags/vivado"},{"label":"fpga","permalink":"/tags/fpga"},{"label":"tcl","permalink":"/tags/tcl"}],"readingTime":1.865,"truncated":true,"authors":[{"name":"Syed Tousif Ahmed","title":"PhD Student, IC Group, UPenn","url":"https://syed-ahmed.github.io","imageURL":"https://syed-ahmed.github.io/images/profile-pic1.jpg","key":"syed"}],"prevItem":{"title":"Creating Vivado Hardware Platform using YAML","permalink":"/yaml-based-vivado-hardware-project"}}}]}')}}]);